#!/usr/bin/python3
import os
import subprocess
import shutil
from pprint import pprint
import ipaddress
from pathlib import Path
import time
import sys
import subprocess

def system_hardening():
    print("========================================================")
    print("System Hardening")
    print("========================================================")
    os.system ("dpkg-reconfigure tzdata")
    print("Installing relevant components\n")
    time.sleep(10)
    os.system("apt update")
    os.system("apt install -y net-tools")
    os.system("apt install -y openssh-server")
    os.system("apt install -y zip unzip")
    os.system("apt install -y python3-pip")
    os.system("apt upgrade -y")
    print("System hardening in progress")
    os.system("echo \"Defaults use_pty\" >> /etc/sudoers")
    os.system("echo \"umask 027\" >> /etc/bash.bashrc")
    os.system("echo \"umask 027\" >> /etc/profile")
    os.system("sed -i \"s,umask 022,umask 027,g\" /etc/login.defs")
    os.system("chmod 600 /boot/grub/grub.cfg")
    os.system("sysctl -w net.ipv4.conf.all.accept_redirects=0")
    os.system("sysctl -w net.ipv4.conf.all.accept_source_route=0")
    os.system("sysctl -w net.ipv4.conf.all.rp_filter=1")
    os.system("sysctl -w net.ipv4.tcp_syncookies=1")
    os.system("sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1")
    os.system("sysctl -w net.ipv4.conf.all.send_redirects=0")
    os.system("sysctl -w net.ipv4.conf.default.send_redirects=0")
    os.system("sysctl -w net.ipv4.conf.all.rp_filter=1")
    os.system("sysctl -w net.ipv4.conf.all.secure_redirects=0")
    os.system("sysctl -w net.ipv4.conf.default.accept_redirects=0")
    os.system("sysctl -w net.ipv4.conf.default.accept_source_route=0")
    os.system("sysctl -w net.ipv4.conf.default.rp_filter=1")
    os.system("sysctl -w net.ipv4.conf.default.secure_redirects=0")
    os.system("sysctl -w kernel.randomize_va_space=2")
    os.system("sysctl -w net.ipv6.conf.all.accept_ra=0")
    os.system("sysctl -w net.ipv6.conf.all.accept_redirects=0")
    os.system("sysctl -w net.ipv6.conf.all.accept_source_route=0")
    os.system("sysctl -w net.ipv6.conf.all.forwarding=0")
    os.system("sysctl -w net.ipv6.conf.default.accept_ra=0")
    os.system("sysctl -w net.ipv6.conf.default.accept_redirects=0")
    os.system("sysctl -w net.ipv6.conf.default.accept_source_route=0")
    os.system("sysctl -w kernel.randomize_va_space=2")
    os.system("sysctl -w net.ipv4.ip_forward=0")
    os.system("sysctl -w net.ipv4.conf.all.log_martians=1")
    os.system("sysctl -w net.ipv4.conf.default.log_martians=1")
    os.system("sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1")
    os.system("sysctl -w net.ipv4.tcp_syncookies=1")
    os.system("sysctl -w net.ipv4.route.flush=1")
    os.system("sysctl -w net.ipv4.tcp_timestamps=0")
    os.system("echo \"net.ipv4.conf.all.accept_redirects = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.all.accept_source_route = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.all.rp_filter = 1\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.tcp_syncookies = 1\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.icmp_echo_ignore_broadcasts = 1\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.all.send_redirects = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.default.send_redirects = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.all.rp_filter = 1\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.all.secure_redirects = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.default.accept_redirects = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.default.accept_source_route = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.default.rp_filter = 1\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.default.secure_redirects = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"kernel.randomize_va_space = 2\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv6.conf.all.accept_ra = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv6.conf.all.accept_redirects = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv6.conf.all.accept_source_route = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv6.conf.all.forwarding = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv6.conf.default.accept_ra = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv6.conf.default.accept_redirects = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv6.conf.default.accept_source_route = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"kernel.randomize_va_space = 2\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.ip_forward = 0\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.all.log_martians = 1\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.conf.default.log_martians = 1\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.icmp_ignore_bogus_error_responses = 1\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.tcp_syncookies = 1\" >> /etc/sysctl.d/hardened.conf")
    os.system("echo \"net.ipv4.tcp_timestamps=0\" >> /etc/sysctl.d/hardened.conf")
    user_login_name = input("Key in username that is used to login: ")
    os.system("chmod 0750 /home/" + user_login_name + "/")
    os.system("echo \"*     hard   core    0\" >> /etc/security/limits.conf")
    os.system("echo \'Defaults logfile=\"/var/log/sudo.log\"\' >> /etc/sudoers")
    os.system("useradd -D -f 30")
    os.system("chage --inactive 30 " + user_login_name)
    os.system("chmod 0700 /etc/cron.d")
    os.system("chmod 0700 /etc/cron.daily")
    os.system("chmod 0700 /etc/cron.hourly")
    os.system("chmod 0700 /etc/cron.monthly")
    os.system("chmod 0700 /etc/cron.weekly")
    os.system("chmod 0600 /etc/crontab")
    os.system("chmod 0600 /etc/ssh/sshd_config")
    os.system("echo \"PermitEmptyPasswords no\" >> /etc/ssh/sshd_config")
    os.system("echo \"PermitRootLogin no\" >> /etc/ssh/sshd_config")
    os.system('echo "AllowUsers ' + user_login_name + '" >> /etc/ssh/sshd_config')
    os.system("echo \"Ciphers aes128-ctr,aes192-ctr,aes256-ctr\" >> /etc/ssh/sshd_config")
    os.system("echo \"MACs hmac-sha2-512,hmac-sha2-256\" >> /etc/ssh/sshd_config")
    os.system("sed -i \"s,#MaxSessions 10,MaxSessions 10,g\" /etc/ssh/sshd_config")
    os.system("sed -i \"s,#LogLevel INFO,LogLevel INFO,g\" /etc/ssh/sshd_config")
    os.system("sed -i \"s,#IgnoreRhosts yes,IgnoreRhosts yes,g\" /etc/ssh/sshd_config")
    os.system("sed -i \"s,#HostbasedAuthentication no,HostbasedAuthentication no,g\" /etc/ssh/sshd_config")
    os.system("sed -i \"s,#ClientAliveInterval 0,ClientAliveInterval 300,g\" /etc/ssh/sshd_config")
    os.system("sed -i \"s,#ClientAliveCountMax 3,ClientAliveCountMax 3,g\" /etc/ssh/sshd_config")
    os.system("sed -i \"s,#MaxAuthTries 6,MaxAuthTries 4,g\" /etc/ssh/sshd_config")
    os.system("sed -i \"s,#LoginGraceTime 2m,LoginGraceTime 60,g\" /etc/ssh/sshd_config")
    os.system("sed -i \"s,X11Forwarding yes,X11Forwarding no,g\" /etc/ssh/sshd_config")
    os.system("sed -i \"s,#Banner none,Banner /etc/issue.net,g\" /etc/ssh/sshd_config")
    os.system("sed -i \"s,#Compress=yes,Compress=yes,g\" /etc/systemd/journald.conf")
    os.system("sed -i \"s,#Storage=auto,Storage=persistent,g\" /etc/systemd/journald.conf")
    os.system("sed -i \"s,Ubuntu,#Ubuntu,g\" /etc/issue")
    os.system("sed -i \"s,Ubuntu,#Ubuntu,g\" /etc/issue.net")
    os.system("echo \"All activity is monitored and reported.\" >> /etc/issue")
    os.system("echo \"All activity is monitored and reported.\" >> /etc/issue.net")
    os.system("echo \'GRUB_CMDLINE_LINUX=\"ipv6.disable=1\"\' >> /etc/default/grub")
    os.system("echo \'GRUB_CMDLINE_LINUX=\"audit=1\"\' >> /etc/default/grub")
    os.system("update-grub")
    os.system("echo \"install cramfs /bin/true\" >> /etc/modprobe.d/cramfs.conf")
    os.system("echo \"install freevxfs /bin/true\" >> /etc/modprobe.d/freevxfs.conf")
    os.system("echo \"install hfs /bin/true\" >> /etc/modprobe.d/hfs.conf")
    os.system("echo \"install jffs2 /bin/true\" >> /etc/modprobe.d/jffs2.conf")
    os.system("echo \"install udf /bin/true\" >> /etc/modprobe.d/udf.conf")
    os.system("echo \"install usb-storage /bin/true\" >> /etc/modprobe.d/usb-storage.conf")
    os.system("echo \"install hfsplus /bin/true\" >> /etc/modprobe.d/hfsplus.conf")
    os.system("echo \"install dccp /bin/true\" >> /etc/modprobe.d/dccp.conf")
    os.system("echo \"install sctp /bin/true\" >> /etc/modprobe.d/sctp.conf")
    os.system("echo \"install rds /bin/true\" >> /etc/modprobe.d/rds.conf")
    os.system("echo \"install tipc /bin/true\" >> /etc/modprobe.d/tipc.conf")
    os.system("echo \"declare -xr TMOUT=600\" >> /etc/profile")
    os.system("echo \"TMOUT=600\" >> /etc/profile")
    os.system("echo \"readonly TMOUT\" >> /etc/profile")
    os.system("echo \"export TMOUT\" >> /etc/profile")
    sed_command_auth = r"sed -i 's,auth\t\[success=1 default=ignore\]\tpam_unix\.so nullok,auth\trequired\t\t\tpam_faillock\.so onerr=fail silent audit deny=3\nauth\t\[success=1 default=ignore\]\tpam_unix\.so nullok,g' /etc/pam.d/common-auth"
    sed_command_account = r"sed -i 's,account\t\[success=1 new_authtok_reqd=done default=ignore\]\tpam_unix\.so,account\trequired\t\t\tpam_faillock.so\naccount\t\[success=1 new_authtok_reqd=done default=ignore\]\tpam_unix\.so,g' /etc/pam.d/common-account"
    subprocess.run(sed_command_auth, shell=True, check=True)
    subprocess.run(sed_command_account, shell=True, check=True)
    os.system("sed -i \"s/-A ufw-before-input -p icmp --icmp-type destination-unreachable -j ACCEPT/#-A ufw-before-input -p icmp --icmp-type destination-unreachable -j ACCEPT/g\" /etc/ufw/before.rules")
    os.system("sed -i \"s/-A ufw-before-input -p icmp --icmp-type time-exceeded -j ACCEPT/#-A ufw-before-input -p icmp --icmp-type time-exceeded -j ACCEPT/g\" /etc/ufw/before.rules")
    os.system("sed -i \"s/-A ufw-before-input -p icmp --icmp-type parameter-problem -j ACCEPT/#-A ufw-before-input -p icmp --icmp-type parameter-problem -j ACCEPT/g\" /etc/ufw/before.rules")
    os.system("sed -i \"s/-A ufw-before-input -p icmp --icmp-type echo-request -j ACCEPT/#-A ufw-before-input -p icmp --icmp-type echo-request -j ACCEPT/g\" /etc/ufw/before.rules")
    os.system("systemctl restart sshd")
    os.system("ufw enable")
    os.system("ufw allow out on lo")
    os.system("ufw deny in from 127.0.0.0/8")
    os.system("ufw allow 22/tcp")
    os.system("ufw default deny incoming")
    os.system("chown root:root /etc/passwd-")
    os.system("chmod u-x,go-rwx /etc/passwd-")
    os.system("chown root:root /etc/group-")
    os.system("chmod u-x,go-rwx /etc/group-su")
    os.system("apt purge -y rsync")
    os.system("apt purge -y telnet")
    os.system("apt purge -y nftables")
    os.system("apt install -y network-manager")
    os.system("nmcli radio all off")
    os.system("apt install -y auditd audispd-plugins")
    os.system("systemctl --now enable auditd")
    print("Completed system hardening\n\n")



def zbx_install(zabbix_main_ip,zabbix_proxy_hostname):
    print("==========================================================================")
    print("Step 1 : Remove Zabbix and Meshcentral Agent (if any) and performing cleanup")
    print("==========================================================================")
    os.system("sudo systemctl stop zabbix-proxy >/dev/null 2>&1")
    os.system("sudo systemctl stop mysql >/dev/null 2>&1")
    os.system("sudo apt remove -y ^zabbix >/dev/null 2>&1")
    os.system("sudo apt remove -y ^mysql >/dev/null 2>&1")
    os.system("sudo rm -rf /var/lib/mysql-files/")
    os.system("sudo rm -rf /var/lib/mysql/")
    os.system("rm -rf /etc/zabbix")
    os.system("sudo apt autoremove -y >/dev/null 2>&1")
    print("Cleaning Up Complete - Success\n\n")

    print("========================================================")
    print("Step 2: Updating Zabbix Repo and Installing Zabbix Proxy")
    print("========================================================")

    os.system("""wget https://repo.zabbix.com/zabbix/6.2/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.2-4%2Bubuntu22.04_all.deb >/dev/null 2>&1""")
    os.system("sudo dpkg -i zabbix-* >/dev/null 2>&1")
    os.system("apt update >/dev/null 2>&1")
    os.system("apt install mysql-server-8.0 zabbix-proxy-mysql zabbix-sql-scripts -y >/dev/null 2>&1")
    os.system("rm  /etc/zabbix/zabbix_proxy.conf >/dev/null 2>&1")
    
    zbx_pxy_conf_file = open("/etc/zabbix/zabbix_proxy.conf", 'w')
    zbx_pxy_conf_file.write("Server=" + zabbix_main_ip + "\n")
    zbx_pxy_conf_file.write("Hostname=" + zabbix_proxy_hostname + "\n")
    zbx_pxy_conf_file.write('ProxyMode=0\n')
    zbx_pxy_conf_file.write('LogFile=/var/log/zabbix/zabbix_proxy.log\n')
    zbx_pxy_conf_file.write('PidFile=/run/zabbix/zabbix_proxy.pid\n')
    zbx_pxy_conf_file.write('Timeout=4\n')
    zbx_pxy_conf_file.write('ProxyOfflineBuffer=24\n')
    zbx_pxy_conf_file.write('CacheSize=2G\n')
    zbx_pxy_conf_file.write('FpingLocation=/usr/bin/fping\n')
    zbx_pxy_conf_file.write('Fping6Location=/usr/bin/fping6\n')
    zbx_pxy_conf_file.write('LogSlowQueries=3000\n')
    zbx_pxy_conf_file.write('StatsAllowedIP=127.0.0.1\n')

    os.system("systemctl enable zabbix-proxy >/dev/null 2>&1")
    print("Installing Proxy - Success\n\n")

    print("========================================================")
    print("Step 3: Preparing PSK key for secure communication      ")
    print("========================================================")

    os.system("openssl rand -hex 64 > pxy.psk")
    os.system("chown zabbix:zabbix pxy.psk")
    os.system("chmod 400 pxy.psk")
    os.system("mv pxy.psk /etc/zabbix/")
    print("Please copy the following string and paste into zabbix main console")
    os.system("cat /etc/zabbix/pxy.psk")

    zbx_pxy_conf_file.write("TLSConnect=psk\n")
    zbx_pxy_conf_file.write("TLSAccept=psk\n")
    zbx_pxy_conf_file.write("TLSPSKIdentity=" + zabbix_proxy_hostname + "-id\n")
    zbx_pxy_conf_file.write("TLSPSKFile=/etc/zabbix/pxy.psk\n")

    print("\nPSK Identity is " + zabbix_proxy_hostname + "-id. Configure this into Zabbix server.\n")
    print("Preparing secure communication environment - Success\n\n")

    print("========================================================")
    print("Step 4: Database Preparation")
    print("========================================================")

    os.system("systemctl unmask mysql")
    os.system("systemctl enable mysql")
    os.system("systemctl start mysql")
    os.system("systemctl status mysql")
    phrase = "sImplydAtA@@2o24"
    os.system("sudo mysql -e \"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY \'" + phrase + "\';\"")
    os.system("mysql -uroot -p" + phrase + " -e \'create database sd_proxy_db character set utf8mb4 collate utf8mb4_bin\' ")
    os.system("mysql -uroot -p" + phrase + " -e \"create user sdproxy@localhost identified by \'" + phrase + "\';\">/dev/null 2>&1")
    os.system("mysql -uroot -p" + phrase + " -e \"grant all privileges on sd_proxy_db.* to sdproxy@localhost;\" >/dev/null 2>&1")
    os.system("mysql -uroot -p" + phrase + " -e \"set global log_bin_trust_function_creators = 1;\" ")
    os.system("cat /usr/share/zabbix-sql-scripts/mysql/proxy.sql | mysql --default-character-set=utf8mb4 -usdproxy -p" + phrase + " sd_proxy_db")
    os.system("mysql -uroot -p" + phrase + " -e \"set global log_bin_trust_function_creators = 0;\"")

    zbx_pxy_conf_file.write("DBName=sd_proxy_db\n")
    zbx_pxy_conf_file.write("DBUser=sdproxy\n")
    zbx_pxy_conf_file.write("DBPassword=" + phrase + "\n")

    time.sleep(10)

    print("Preparing database environment - Success")

    print("Final Step - Restarting Zabbix Proxy\n\n")
    os.system("systemctl enable zabbix-proxy")
    time.sleep(10)
    os.system("systemctl start zabbix-proxy")
    time.sleep(30)
    os.system("systemctl restart zabbix-proxy")
    os.system("systemctl status zabbix-proxy")



def mesh_install(mesh_main_ip):
    print("========================================================")
    print("Step 5: Meshcentral Installation")
    print("========================================================")
    os.system("sudo cp /etc/hosts /etc/hosts_bak")
    hosts_file = open("/etc/hosts", 'a')
    hosts_file.write("\n" + mesh_main_ip + " probe.simplydata.com.my\n")
    os.system("wget 'https://" + str(
        mesh_main_ip) + "/meshagents?script=1' --no-check-certificate -O ./meshinstall.sh || wget 'https://" + str(mesh_main_ip) + "/meshagents?script=1' --no-proxy --no-check-certificate -O ./meshinstall.sh")
    os.system("chmod 755 ./meshinstall.sh && sudo -E ./meshinstall.sh https://" + str(mesh_main_ip) + " '@lHhUIlY$pWpXB1JHH8rhP@mm1nBg3sjcGVjK4$N1eVH5mUJArDUVDHyOwYuV$Kr' || ./meshinstall.sh https://" + str(mesh_main_ip) + " '@lHhUIlY$pWpXB1JHH8rhP@mm1nBg3sjcGVjK4$N1eVH5mUJArDUVDHyOwYuV$Kr'")
    os.system("rm -rf meshagent meshinstall.sh")
    
    
    
def filebeat_install():
    print("========================================================")
    print("Step 6: Filebeat Installation")
    print("========================================================")
    
    os.system("curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add -")
    os.system("echo 'deb https://artifacts.elastic.co/packages/8.x/apt stable main' | tee -a /etc/apt/sources.list.d/elastic-8.x.list")
    os.system("apt update")
    os.system("apt install -y filebeat")
    
    logstash_ip = input("Enter IP address or DNS of this logcollector server: ")
    os.chdir("/etc/filebeat")
    os.system("openssl req -subj '/CN={}' -x509 -days 3650 -batch -nodes -newkey rsa:2048 -keyout logstash-forwarder.key -out logstash-forwarder.crt".format(logstash_ip))
    os.system("systemctl start filebeat")
    os.system("systemctl enable filebeat")
    
    
    
def logstash_install():
    print("========================================================")
    print("Step 7: Logstash Installation")
    print("========================================================")
    
    os.system("apt install -y logstash")
    os.system("systemctl start logstash")
    os.system("systemctl enable logstash")



try:
    #num = int(input("Enter number between 1 and 2 : "))i
    zbx_net_option = int(input("Please Choose Option Below:\n1 - If Connected using vpn\n2 - If Connected over Public Internet\n0 - To exit the installation\n"))

    if zbx_net_option == 1:
        print("You have Choose Option 1 - Installation over VPN\n\n")
        zabbix_main_ip = str("192.168.1.101")
        mesh_main_ip = str("192.168.1.99")
        zabbix_proxy_hostname = input("Please specify hostname for the zabbix proxy: ")
        system_hardening()
        zbx_install(zabbix_main_ip,zabbix_proxy_hostname)
        mesh_install(mesh_main_ip)
        filebeat_install()
        logstash_install()
        print("Installation Completed")

    elif zbx_net_option == 2:
        print("You have choose option 2 - Installation over Public Network\n\n")
        zabbix_main_ip = str("103.164.234.235:8443")
        mesh_main_ip = str("103.164.234.235")
        zabbix_proxy_hostname = input("Please specify hostname for the zabbix proxy: ")
        system_hardening()
        zbx_install(zabbix_main_ip,zabbix_proxy_hostname)
        mesh_install(mesh_main_ip)
        filebeat_install()
        logstash_install()
        print("Installation Completed")

    elif zbx_net_option == 0:
        print("You have entered 0, the installation will close")
        sys.exit()

    else:
        print("Please enter the correct number")

except ValueError:
    print("Please input integer only between 1 to 2. The script exited. Please run again the script")